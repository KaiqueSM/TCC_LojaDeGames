@model PythonGames.Classes.Models.ItensCarrinho

@{
    ViewBag.Title = "AdicionarItem";
}

<script>
    //recebendo dados do produto
    var valor = @ViewBag.VlProd;
    var estoque = @ViewBag.QtEstoque;

    function subQtd() {
        document.getElementById('input-qtd').value--;
        var i = document.getElementById('input-qtd').value;

        document.getElementById('input-valor').value = valor * i;

        if (i == 1)
            document.getElementById('btn-sub').disabled = true;

        document.getElementById('btn-sum').disabled = false;
    }

    function somaQtd() {
        document.getElementById('input-qtd').value++;
        document.getElementById('btn-sub').disabled = false;
        var i = document.getElementById('input-qtd').value;

        document.getElementById('input-valor').value = valor * i;

        if (i == estoque)
            document.getElementById('btn-sum').disabled = true;
    }

    function calcFrete(valor) {

        //Nova variável "cep" somente com dígitos.
        var cep = valor.replace(/\D/g, '');

        //Verifica se campo cep possui valor informado.
        if (cep != "") {

            //Expressão regular para validar o CEP.
            var validacep = /^[0-9]{8}$/;

            //Valida o formato do CEP.
            if (validacep.test(cep)) {

                //Preenche os campos com "..." enquanto consulta webservice.
                frete(cep);
            }
            else {
                //cep é inválido.
                document.getElementById('txt_frete').style.display = "none";
                document.getElementById('resp_frete').value = ("");
            }
        } //fim if.
        else {
            //cep sem valor, limpa formulário.
            document.getElementById('txt_frete').style.display = "none";
            document.getElementById('resp_frete').value = ("");        }
    }

    function frete(cep) {
        $.ajax({
            url: '@Url.Action("CalculaFrete","Carrinho")?cep='+cep,
            type: "POST",
            contentType: "aplication/json",
            data: "",
            success: function (result) {
                document.getElementById('txt_frete').style.display = "block";
                document.getElementById('resp_frete').value = ("Prazo: "+result[0] + " dias  valor: "+result[1]+"R$");
            },
            error: function (xhr, exception) {
                document.getElementById('txt_frete').style.display = "none";
                document.getElementById('resp_frete').value = ("");
            }
        });
    }
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div style="display: none;">
            <div class="form-group">
                @Html.LabelFor(model => model.cd_produto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cd_produto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cd_produto, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>




        <div class="form-carrinho">

            <div class="item-form-carrinho form-carrinho-img" style="background-image: url('@ViewBag.LinkImg');">
            </div>
            <div class="item-form-carrinho form-carrinho-inputs">
                <h3>@ViewBag.NmProd</h3>
                <hr style="border: 1px solid rgb(255, 127, 38);">
                <h6>
                    @ViewBag.ProdDesc
                </h6>
                <p>
                    Categoria: @ViewBag.NmCat
                </p>


                @if (ViewBag.QtEstoque > 0)
                {
                    <p>
                        Valor total: @Html.EditorFor(model => model.vl_item, new { htmlAttributes = new { @style = "width: 50px;", @value = @ViewBag.VlProd, @id = "input-valor", @readonly = "readonly" } }) R$
                    </p>
                    <p>
                        Quantidade: &nbsp;
                        <input type="button" value="-" id="btn-sub" onclick="subQtd()" disabled />
                        @Html.EditorFor(model => model.qt_item, new { htmlAttributes = new { @class = "", @id = "input-qtd", @min = "1", @max = @ViewBag.QtEstoque, @readonly = "readonly", @value = "1" } })
                        <input type="button" value="+" id="btn-sum" onclick="somaQtd()" />
                    </p>
                    <br />
                    <p>
                        Calcular frete: &nbsp; <input type="text" class="inp-calc-frete" placeholder="CEP" name="no_cep" id="no_cep" maxlength="9" onblur="calcFrete(this.value);"/>
                    </p>
                    <p id="txt_frete" style="display: none;">
                        <input type="text" id="resp_frete" disabled/>
                    </p>
                    <br />
                    <input type="submit" value="Adcionar ao Carrinho" class="btn-add" />

                }
                else
                {
                    <p class="text-danger">Produto fora de estoque</p>
                }


                <br><br>


            </div>

        </div>
    </div>



}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#no_cep").inputmask("mask", { "mask": "99999-999" }, { reverse: true });

        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}